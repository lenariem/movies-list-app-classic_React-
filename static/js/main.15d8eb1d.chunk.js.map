{"version":3,"sources":["components/Header.jsx","components/SearchPanel.jsx","components/PostFilter.jsx","components/PostListItem.jsx","components/PostList.jsx","components/AddForm.jsx","components/App.jsx","index.js"],"names":["AppHeader","styled","div","props","colored","Header","liked","watched","allPosts","SearchPanelBlock","SearchPanel","state","term","e","target","value","toLowerCase","this","setState","onUpdateSearch","className","type","placeholder","onChange","bind","Component","PostFilter","buttons","name","label","map","filter","onFilterSelect","activeButtonStyle","key","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","aria-hidden","PostListBlock","PostList","posts","elements","item","id","itemProps","ListGroup","FormBlock","AddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","App","data","randomstring","generate","deleteItem","index","findIndex","element","slice","body","length","newItem","old","searchPost","items","includes","filterPost","visiblePosts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15d8eb1d.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst AppHeader = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  h1 {\n      font-size: 26px;\n      color: ${(props) => (props.colored ? \"black\" : \"red\")};\n      :hover {\n      color: blue;\n      }\n  }\n  h2 {\n      font-size: 1.2rem;\n      color: grey;\n}`;\n\nexport default function Header({ liked, watched, allPosts }) {\n  return (\n    /*  <AppHeader as='a'  will change header to a tag*/\n    <AppHeader colored>\n      <h1>List of User's movies</h1>\n      <h2>\n          {allPosts} posts, watched {watched}, liked {liked}\n      </h2>\n    </AppHeader>\n  );\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst SearchPanelBlock = styled.div`\n  .search-panel {\n    margin: 1rem 0;\n  }\n  .search-panel .search-input {\n    width: auto;\n    flex-grow: 1;\n    margin-right: 3px;\n}`;\n\nexport default class SearchPanel extends Component {\n  state = {\n      term: \"\",\n  };\n  \n\nonUpdateSearch(e) {\n  const term = e.target.value.toLowerCase();\n  this.setState({ term: term });\n  /* this.setState({term}) the same*/\n  this.props.onUpdateSearch(term);\n}\n\n\nrender() {\n  return (\n    <SearchPanelBlock>\n      <input\n        className=\"form-control search-input\"\n        type=\"text\"\n        placeholder=\"Search in your posts...\"\n        onChange={this.onUpdateSearch.bind(this)}\n      />\n    </SearchPanelBlock>\n  );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class PostFilter extends Component {\n  buttons = [\n      { name: \"all\", label: \"All\" },\n      { name: \"like\", label: \"Liked\" },\n    ];\n    \n  render() {\n    const buttons = this.buttons.map(({ name, label }) => {\n      const { filter, onFilterSelect } = this.props;\n      const active = filter === name;\n      const activeButtonStyle = active ? \"btn-info\" : \"btn-outline-secondary\";\n\n      return (\n        <button\n          key={name}\n          type=\"button\"\n          className={`btn ${activeButtonStyle}`}\n          onClick={() => onFilterSelect(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n\n    return <div className=\"btn-group\">{buttons}</div>;\n  }\n}\n","import React from \"react\";\nimport \"../css/PostListItem.css\";\n\nexport default function PostListItem({label,onDelete,onToggleImportant,onToggleLiked,important,like}) {\n  let classNames = \"app-list-item d-flex justify-content-between\";\n\n  if (important) {\n      classNames += \" important\";\n  }\n  if (like) {\n      classNames += \" like\";\n  }\n  \n  return (\n    <div className={classNames}>\n      <span className=\"app-list-item-label\" onClick={onToggleLiked}>\n          {label}\n      </span>\n      <div className=\"d-flex justify-content-center align-items-center\">\n          <button\n            type=\"button\"\n            className=\"btn-star btn-sm\"\n            onClick={onToggleImportant}\n          >\n            <i className =\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\n          </button>\n          <button type=\"button\" className=\"btn-trash btn-sm\" onClick={onDelete}>\n            <i className=\"fa fa-trash-o\"></i>\n          </button>\n          <i className=\"fa fa-heart\"></i>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PostListItem from \"./PostListItem\";\nimport styled from \"styled-components\";\nimport { ListGroup } from \"reactstrap\";\n\nconst PostListBlock = styled.div`\n.app-list {\n  margin-top: 50px;\n}\n.app-list .list-group-item {\n  padding: 20px 35px 10px 35px;\n  margin-top: 10px;\n}`;\n\nexport default function PostList({posts,onDelete,onToggleImportant,onToggleLiked}) {\nconst elements = posts.map((item) => {\n  const { id, ...itemProps } = item;\n  return (\n    <li className=\"list-group-item\" key={id}>\n      {/* <PostListItem {...itemProps} */}\n      <PostListItem\n        label={itemProps.label}\n        important={itemProps.important}\n        like={itemProps.like}\n        onDelete={() => onDelete(id)}\n        onToggleImportant={() => onToggleImportant(id)}\n        onToggleLiked={() => onToggleLiked(id)}\n      />\n    </li>\n  );\n});\n\nreturn (\n  <PostListBlock>\n    <ListGroup className=\"app-list\">{elements}</ListGroup>\n    <p>*to mark as liked click on movie name</p>\n  </PostListBlock>\n);\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst FormBlock = styled.div`\n  .bottom-panel {\n    margin-top: 20px;\n  }\n  .bottom-panel .new-post-label {\n    width: auto;\n    flex-grow: 1;\n    margin-right: 3px;\n  }`;\n\nexport default class AddForm extends Component {\n  state = {\n      text: \"\",\n  };\n\n  onValueChange = (e) => {\n    this.setState({\n      text: e.target.value,\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAdd(this.state.text);\n    this.setState({\n      text: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <FormBlock>\n        <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"What movie are you going to watch?\"\n            className=\"form-control new-post-label\"\n            onChange={this.onValueChange}\n            value={this.state.text}\n          />\n          <button className=\"btn-outline-secondary\" type=\"submit\">\n            Add\n          </button>\n        </form>\n      </FormBlock>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport randomstring from \"randomstring\";\n\nimport Header from \"./Header\";\nimport SearchPanel from \"./SearchPanel\";\nimport PostFilter from \"./PostFilter\";\nimport PostList from \"./PostList\";\nimport AddForm from \"./AddForm\";\n\nimport styled from 'styled-components';\n\nconst AppBlock = styled.div`\n  margin: 0 auto;\n  max-width: 800px;\n`;\n\nexport default class App extends Component {\n  state = {\n      data: [\n        { label: \"Titanic(Netflix)\", important: false, like: false, id: randomstring.generate(5),},\n        { label: \"Inception (advice from Anna)\", important: true, like: false, id: randomstring.generate(5) },\n        { label: \"Tenet (new,cinema)\", important: true, like: false, id: randomstring.generate(5) }\n      ],\n      term: '',\n      filter: 'all'\n  };\n  \n\n  deleteItem = (id) => {\n    this.setState(({ data }) => {\n      const index = data.findIndex(element => element.id === id);\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n      return {\n        data: newArr\n      }\n    });\n  }\n\n  onAdd = (body) => {\n    if(body.length > 0) {\n      const newItem = {\n        label: body,\n        important: true,\n        like: false,\n        id: randomstring.generate(5)\n      }\n      this.setState(({data}) => {\n        const newArr = [...data, newItem];\n        return {\n          data: newArr\n        }\n      })\n    }\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({data}) => {\n      const index = data.findIndex(element => element.id === id);\n      const old = data[index];\n      const newItem = {...old, important: !old.important};\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      }\n    });\n  }\n\n  onToggleLiked = (id) => {\n    this.setState(({data}) => {\n      const index = data.findIndex(element => element.id === id);\n      const old = data[index];\n      const newItem = {...old, like: !old.like};\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      }\n    });\n  }\n\n  searchPost = (items, term) => {\n    //if empty or user deleted term\n    if(term.length === 0) {\n      return items\n    }\n    return items.filter(item => {\n      return item.label.toLowerCase().includes(term)\n    })\n  }\n\n  filterPost = (items, filter) => {\n    if (filter === 'like') {\n      return items.filter(item => item.like)\n    } else {\n      return items\n    }\n  }\n\n  onUpdateSearch = (term) => {\n    this.setState({term})\n  }\n\n  onFilterSelect = (filter) => {\n    this.setState({filter})\n  }\n\n  render() {\n    const {data, term, filter} = this.state;\n    const liked = data.filter(item => item.like).length;\n    const watched = data.filter(item => !item.important).length;\n    const allPosts = data.length;\n    const visiblePosts = this.filterPost(this.searchPost(data, term), filter)\n\n\n    return (\n      <AppBlock>\n        <Header \n          liked={liked}\n          watched={watched}\n          allPosts={allPosts}\n        />\n        <div className=\"search-panel d-flex\">\n          <SearchPanel onUpdateSearch={this.onUpdateSearch}/>\n          <PostFilter \n            filter={filter}\n            onFilterSelect={this.onFilterSelect}\n          />\n        </div>\n        <PostList \n          posts={visiblePosts} \n          onDelete={this.deleteItem} \n          onToggleImportant={this.onToggleImportant}\n          onToggleLiked={this.onToggleLiked}\n        />\n        <AddForm \n          onAdd={this.onAdd}\n        />\n      </AppBlock>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport \"./css/index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}